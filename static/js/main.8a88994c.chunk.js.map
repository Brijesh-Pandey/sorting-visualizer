{"version":3,"sources":["containers/SortingVisualizer/SortingVisualizer.module.css","hoc/Layout/Layout.module.css","hoc/Layout/Layout.js","containers/SortingVisualizer/Bars/Bar/Bar.js","components/UI/Button/Button.js","containers/SortingVisualizer/Bars/Bars.js","components/UI/Card/Card.js","containers/SortingVisualizer/Controls/Controls.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/selectionSort.js","sortingAlgorithms/insertionSort.js","sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","utilities.js","containers/SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","props","className","classes","Content","children","Bar","height","join","style","Button","classNames","disabled","onClick","clicked","notfinished","Bars","ref","bars","barsContainer","useRef","useImperativeHandle","current","classList","heights","map","randHeight","i","key","name","id","defaultValue","onChange","changedSortingFunction","value","generateNewArray","disabledControls","sort","sortConfig","speed","forwardRef","Card","Controls","htmlFor","type","min","max","size","changedArraySize","disableControls","step","changedSortingSpeed","swap2","arr","ind1","ind2","selectionSort","swapOrderArr","length","push","j","prevMin","swap","insertionSort","swapOrderArray","getMergeSortRecursiveSwapOrder","mergeSortHelper","start","end","mid","Math","floor","compIdx1","compIdx2","temp","g","mergeRecursive","quickSort","left","right","pivotIndex","pivotLomuto","pivot","newRandomHeights","ceil","random","getRandomArray","getRandomNum","quickSortHoare","pivotHoare","RANDOM_COLORS","SortingVisualizer","useState","randomHeights","setRandomHeights","isSorting","setIsSorting","numBars","setNumBars","sortingSpeed","setSortingSpeed","sortingFunction","setSortingFunction","changeToDefault","setChangeToDefault","sortingConfig","setSortingConfig","useEffect","handleMergeSort","handleGenerateNewArray","handleColorNewBars","backgroundColor","handleBubbleSort","config","remove","isSwap","bubbleSort","state","swapIdx1","swapIdx2","setTimeout","add","handleSelectionSort","handleInsertionSort","implementation","prevColor1","prevColor2","count","color","handleQuickSort","getQuickSortSwapOrder","handleChangeSortingFunction","event","target","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8a88994c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SortingVisualizer\":\"SortingVisualizer_SortingVisualizer__1kbp7\",\"Bars\":\"SortingVisualizer_Bars__1eicN\",\"Controls\":\"SortingVisualizer_Controls__FSt0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","import React from \"react\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\n\r\nconst Layout = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.Layout}>\r\n\t\t\t<header>\r\n\t\t\t\t<h1>Sorting Visualizer</h1>\r\n\t\t\t</header>\r\n\t\t\t<main className={classes.Content}>{props.children}</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\n// import { getRandomColor } from \"../../../../utilities\";\r\n\r\nconst Bar = (props) => {\r\n\tconst height = `${props.height}px`;\r\n\tconst classNames = [\"bar\"];\r\n\treturn (\r\n\t\t<div className={classNames.join(\" \")} style={{ height: height }}>\r\n\t\t\t{/* {props.height} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Bar;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n\tlet classNames = [\"button\", props.classNames];\r\n\treturn (\r\n\t\t<button\r\n\t\t\tdisabled={props.disabled}\r\n\t\t\tclassName={classNames.join(\" \")}\r\n\t\t\tonClick={props.clicked}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t\t{props.notfinished && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<em>Coming Soon</em>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React, { useRef, useImperativeHandle, forwardRef } from \"react\";\r\n\r\nimport Bar from \"./Bar/Bar\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\n\r\nlet Bars = (props, ref) => {\r\n\tconst barsContainer = useRef();\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\tchildren: barsContainer.current.children,\r\n\t\tclassList: barsContainer.current.classList,\r\n\t}));\r\n\r\n\tlet bars;\r\n\tif (props.heights) {\r\n\t\tbars = props.heights.map((randHeight, i) => {\r\n\t\t\treturn <Bar key={i} height={randHeight}></Bar>;\r\n\t\t});\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<select\r\n\t\t\t\tname=\"sorting-algorithms\"\r\n\t\t\t\tid=\"algos\"\r\n\t\t\t\tdefaultValue={\"MergeSort\"}\r\n\t\t\t\tonChange={props.changedSortingFunction}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"BubbleSort\">Bubble Sort</option>\r\n\t\t\t\t<option value=\"SelectionSort\">Selection Sort</option>\r\n\t\t\t\t<option value=\"InsertionSort\">Insertion Sort</option>\r\n\t\t\t\t<option value=\"MergeSort\">Merge Sort</option>\r\n\t\t\t\t<option value=\"QuickSort\">Quick Sort</option>\r\n\t\t\t\t<option value=\"ShellSort\" disabled>\r\n\t\t\t\t\tShell Sort (Coming Soon)\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"HeapSort\" disabled>\r\n\t\t\t\t\tHeap Sort (Coming Soon)\r\n\t\t\t\t</option>\r\n\t\t\t\t<option value=\"RadixSort\" disabled>\r\n\t\t\t\t\tRadix Sort (Coming Soon)\r\n\t\t\t\t</option>\r\n\t\t\t</select>\r\n\t\t\t<div className=\"bars\" ref={barsContainer}>\r\n\t\t\t\t{bars && bars}\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\t\t\t\tclassNames=\"burgundy\"\r\n\t\t\t\tclicked={props.generateNewArray}\r\n\t\t\t\tdisabled={props.disabledControls}\r\n\t\t\t>\r\n\t\t\t\tNew Array\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tclicked={() =>\r\n\t\t\t\t\tprops.sort(props.sortConfig, props.heights, props.speed)\r\n\t\t\t\t}\r\n\t\t\t\tdisabled={props.disabledControls}\r\n\t\t\t>\r\n\t\t\t\tSort\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nBars = forwardRef(Bars);\r\n\r\nexport default Bars;\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n\treturn <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../../../components/UI/Card/Card\";\r\n\r\nimport Button from \"../../../components/UI/Button/Button\";\r\n\r\nlet Controls = (props) => {\r\n\treturn (\r\n\t\t<div className=\"controls\">\r\n\t\t\t<Card>\r\n\t\t\t\t<h2>Controls</h2>\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<label htmlFor=\"arrSize\">Array Size</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin=\"5\"\r\n\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\tvalue={props.size}\r\n\t\t\t\t\t\tonChange={props.changedArraySize}\r\n\t\t\t\t\t\tdisabled={props.disableControls}\r\n\t\t\t\t\t\tid=\"arrSize\"\r\n\t\t\t\t\t\tname=\"arrSize\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={props.size}\r\n\t\t\t\t\t\tonChange={props.changedArraySize}\r\n\t\t\t\t\t\tdisabled={props.disableControls}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<label htmlFor=\"sortSpeed\">Sorting Speed</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin=\"5\"\r\n\t\t\t\t\t\tmax=\"2000\"\r\n\t\t\t\t\t\tstep=\"5\"\r\n\t\t\t\t\t\tvalue={props.speed}\r\n\t\t\t\t\t\tonChange={props.changedSortingSpeed}\r\n\t\t\t\t\t\tid=\"sortSpeed\"\r\n\t\t\t\t\t\tname=\"sortSpeed\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"speed-labels\">\r\n\t\t\t\t\t\t<p>Extremely Fast</p>\r\n\t\t\t\t\t\t<p>Extremely Slow</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t\t{/* <Card>\r\n\t\t\t\t<h2>Options</h2>\r\n\t\t\t</Card> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Controls;\r\n","export function bubbleSort(arr) {\r\n\t// let noSwaps;\r\n\tlet isSwap = false;\r\n\tlet swapOrderArr = [];\r\n\tlet j;\r\n\tfor (let i = arr.length - 1; i >= 0; i--) {\r\n\t\t// noSwaps = true;\r\n\t\tfor (j = 0; j < i; j++) {\r\n\t\t\tif (arr[j] > arr[j + 1]) {\r\n\t\t\t\tswap2(arr, j, j + 1);\r\n\t\t\t\t// noSwaps = false;\r\n\t\t\t\tisSwap = true;\r\n\t\t\t}\r\n\t\t\tswapOrderArr.push([[...arr], j, j + 1, \"COMPARING\"]);\r\n\t\t\t// swapOrderArr.push([[...arr], j, j + 1, \"RESET\"]);\r\n\t\t\tif (isSwap) {\r\n\t\t\t\tswapOrderArr.push([[...arr], j, j + 1, \"SWAPPING-1\"]);\r\n\t\t\t\tswapOrderArr.push([[...arr], j, j + 1, \"SWAPPING-2\"]);\r\n\t\t\t\tswapOrderArr.push([[...arr], j, j + 1, \"SWAPPING-3\"]);\r\n\t\t\t}\r\n\t\t\tisSwap = false;\r\n\t\t}\r\n\t\tswapOrderArr.push([[...arr], j - 1, j, \"LAST-SORTED\"]);\r\n\t\t// if (noSwaps) break;\r\n\t}\r\n\r\n\tswapOrderArr.push([[...arr], 0, 0, \"ALL-SORTED-1\"]);\r\n\tswapOrderArr.push([[...arr], 0, 0, \"ALL-SORTED-2\"]);\r\n\r\n\treturn swapOrderArr;\r\n\t// return arr;\r\n}\r\n\r\nfunction swap2(arr, ind1, ind2) {\r\n\t[arr[ind1], arr[ind2]] = [arr[ind2], arr[ind1]];\r\n}\r\n\r\n// console.log(bubbleSort([5, 3, 9, 2]));\r\n// console.log(bubbleSort([5, 1, 2, 3, 4]));\r\n// bubbleSort([15, 7, 4, 11, 12, 11]);\r\n","export function selectionSort(arr) {\n\tlet swapOrderArr = [];\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tlet min = i;\n\t\tswapOrderArr.push([[...arr], i, min, \"GET-INITIAL\"]);\n\t\tfor (let j = i + 1; j < arr.length; j++) {\n\t\t\tswapOrderArr.push([[...arr], j, min, \"CHECK-MIN\"]);\n\t\t\tif (arr[j] < arr[min]) {\n\t\t\t\tlet prevMin;\n\t\t\t\tif (min === i) {\n\t\t\t\t\tprevMin = null;\n\t\t\t\t} else {\n\t\t\t\t\tprevMin = min;\n\t\t\t\t}\n\t\t\t\tmin = j;\n\t\t\t\tswapOrderArr.push([[...arr], j, prevMin, \"CHANGE-MIN\"]);\n\t\t\t} else {\n\t\t\t\tswapOrderArr.push([[...arr], j, min, \"CHANGE-BACK\"]);\n\t\t\t}\n\t\t}\n\t\tif (min !== i) {\n\t\t\tswap(arr, i, min);\n\t\t\tswapOrderArr.push([[...arr], i, min, \"SWAPPING-1\"]);\n\t\t\tswapOrderArr.push([[...arr], i, min, \"SWAPPING-2\"]);\n\t\t} else {\n\t\t\tswapOrderArr.push([[...arr], i, min, \"NO-SWAP\"]);\n\t\t}\n\t}\n\n\tswapOrderArr.push([[...arr], null, null, \"ALL-SORTED\"]);\n\treturn swapOrderArr;\n\t// return arr;\n}\n\nfunction swap(arr, ind1, ind2) {\n\t[arr[ind1], arr[ind2]] = [arr[ind2], arr[ind1]];\n}\n\n// console.log(selectionSort([5, 3, 9, 2]));\n// console.log(selectionSort([5, 1, 2, 3, 4]));\n// console.log(selectionSort([15, 7, 4, 11, 12, 11]));\nselectionSort([15, 7, 4, 11, 12, 11]);\n","export function insertionSort(arr) {\n\tlet swapOrderArray = [];\n\t// console.log(arr, \"\\n\");\n\tfor (let i = 1; i < arr.length; i++) {\n\t\tlet current = arr[i];\n\t\t// console.log(\"current:\", current);\n\t\tswapOrderArray.push([[...arr], i, null, \"START\"]); // yellow\n\t\t// swapOrderArray.push([[...arr], i - 1, i, \"SWAP-1\"]); // yellow\n\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\tif (arr[j] > current) {\n\t\t\t\t// if (i !== 1 && j !== i - 1)\n\t\t\t\tswapOrderArray.push([[...arr], j, j + 1, \"SWAP-1\"]); // yellow\n\t\t\t\tswapOrderArray.push([[...arr], j, j + 1, \"SWAP-2\"]); // both red\n\t\t\t\t// console.log(\"\", arr[j]);\n\t\t\t\tswap(arr, j, j + 1);\n\t\t\t\tswapOrderArray.push([[...arr], j, j + 1, \"SWAP-3\"]); // swap\n\t\t\t\tswapOrderArray.push([[...arr], j, j + 1, \"SWAP-4\"]); // blue\n\t\t\t\t// console.log(arr);\n\t\t\t\t// arr[j + 1] = arr[j];\n\t\t\t} else {\n\t\t\t\tswapOrderArray.push([[...arr], j, j + 1, \"DONE-1\"]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tswapOrderArray.push([[...arr], j, j + 1, \"DONE-2\"]);\n\t\tswapOrderArray.push([[...arr], j, j + 1, \"DONE-3\"]);\n\t\t// swapOrderArray.push([[...arr], j, j + 1, \"SORTED\"]); // blue\n\t\t// arr[j + 1] = current;\n\t\t// console.log(arr, \"\\n\");\n\t}\n\tswapOrderArray.push([[...arr], null, null, \"ALL-SORTED\"]);\n\treturn swapOrderArray;\n\t// return arr;\n}\n\nfunction swap(arr, i, j) {\n\t[arr[i], arr[j]] = [arr[j], arr[i]];\n}\n\nfunction getRandomNum(min, max) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getRandomArray = () => {\n\tconst newRandomHeights = [];\n\tfor (let i = 0; i < 20; i++) {\n\t\tnewRandomHeights.push(getRandomNum(5, 450));\n\t}\n\treturn newRandomHeights;\n};\n\nlet arr = getRandomArray();\ninsertionSort(arr);\n","export function mergeSortIterative(arr) {\r\n\tlet swapOrderArray = [];\r\n\t// break arr into individual arrs of single integers\r\n\tlet result = arr.map((num, i) => [[num], i]);\r\n\r\n\t// keep merging until result contains a single arr\r\n\twhile (result.length > 1) {\r\n\t\tconst oddNumbered = result.length % 2 !== 0;\r\n\t\tlet temp = [];\r\n\r\n\t\t// iterate 2 subarrs at a time and merge into larger subarr\r\n\t\tfor (let i = 0; i < result.length; i += 2) {\r\n\t\t\tlet a = result[i][0];\r\n\t\t\tlet b = result[i + 1][0];\r\n\t\t\tlet aIndex = result[i][1];\r\n\t\t\tlet bIndex = result[i + 1][1] + result[i + 1][0].length - 1;\r\n\t\t\tlet bIndexStart = result[i + 1][1];\r\n\r\n\t\t\t// pre-merge 3 subarrs into 2 if there are odd number of subarrs\r\n\t\t\tif (oddNumbered && i === result.length - 3) {\r\n\t\t\t\tlet last = result[i + 2][0];\r\n\t\t\t\tlet lastIndex = result[i + 2][1] + result[i + 2][0].length - 1;\r\n\t\t\t\tb = mergeIterative(\r\n\t\t\t\t\tarr,\r\n\t\t\t\t\tb,\r\n\t\t\t\t\tlast,\r\n\t\t\t\t\tresult[i + 1][1],\r\n\t\t\t\t\tresult[i + 2][1],\r\n\t\t\t\t\tlastIndex,\r\n\t\t\t\t\tswapOrderArray\r\n\t\t\t\t)[0];\r\n\t\t\t\t// bIndex += lastIndex - aIndex - 1;\r\n\t\t\t\tbIndex = lastIndex;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\t// accumulate intermediate result\r\n\t\t\tlet merged = mergeIterative(\r\n\t\t\t\tarr,\r\n\t\t\t\ta,\r\n\t\t\t\tb,\r\n\t\t\t\taIndex,\r\n\t\t\t\tbIndexStart,\r\n\t\t\t\tbIndex,\r\n\t\t\t\tswapOrderArray\r\n\t\t\t);\r\n\t\t\ttemp.push(merged);\r\n\t\t}\r\n\t\t// current level merged, update result\r\n\t\tresult = temp;\r\n\t}\r\n\t// return result[0];\r\n\tswapOrderArray.push([[...arr], 0, 0, \"ALL-SORTED\"]);\r\n\treturn swapOrderArray;\r\n}\r\n\r\nfunction mergeIterative(arr, arr1, arr2, start, mid, end, swapOrderArray) {\r\n\tlet res = [];\r\n\tlet i = 0;\r\n\tlet j = 0;\r\n\tlet compIdx1 = start;\r\n\tlet compIdx2 = mid;\r\n\r\n\twhile (i < arr1.length && j < arr2.length) {\r\n\t\tswapOrderArray.push([[...arr], compIdx1, compIdx2, \"COMPARING\"]);\r\n\t\tif (arr1[i] < arr2[j]) {\r\n\t\t\tswapOrderArray.push([[...arr], compIdx1++, compIdx2, \"CASE-LEFT\"]);\r\n\t\t\tres.push(arr1[i]);\r\n\t\t\ti++;\r\n\t\t} else {\r\n\t\t\tswapOrderArray.push([\r\n\t\t\t\t[...arr],\r\n\t\t\t\tcompIdx1,\r\n\t\t\t\tcompIdx2,\r\n\t\t\t\t\"CASE-RIGHT-INIT\",\r\n\t\t\t]);\r\n\t\t\tlet temp = arr[compIdx2];\r\n\t\t\tfor (let k = compIdx2; k > compIdx1; k--) {\r\n\t\t\t\tarr[k] = arr[k - 1];\r\n\t\t\t}\r\n\t\t\tarr[compIdx1] = temp;\r\n\t\t\tswapOrderArray.push([\r\n\t\t\t\t[...arr],\r\n\t\t\t\tcompIdx1,\r\n\t\t\t\tcompIdx2++,\r\n\t\t\t\t\"CASE-RIGHT-SHIFT\",\r\n\t\t\t]);\r\n\t\t\tswapOrderArray.push([\r\n\t\t\t\t[...arr],\r\n\t\t\t\tcompIdx1,\r\n\t\t\t\t++compIdx1,\r\n\t\t\t\t\"CASE-RIGHT-REVERT\",\r\n\t\t\t]);\r\n\t\t\tres.push(arr2[j]);\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\r\n\twhile (i < arr1.length) {\r\n\t\tswapOrderArray.push([[...arr], compIdx1, compIdx2, \"ONE-SIDE\"]);\r\n\t\tres.push(arr1[i]);\r\n\t\ti++;\r\n\t\tcompIdx1++;\r\n\t}\r\n\r\n\twhile (j < arr2.length) {\r\n\t\tswapOrderArray.push([[...arr], compIdx2, compIdx1, \"ONE-SIDE\"]);\r\n\t\tres.push(arr2[j]);\r\n\t\tj++;\r\n\t\tcompIdx2++;\r\n\t}\r\n\r\n\tswapOrderArray.push([[...arr], start, end, \"MERGED\"]);\r\n\r\n\treturn [res, start, end];\r\n}\r\n\r\nexport function getMergeSortRecursiveSwapOrder(arr) {\r\n\tconst swapOrderArray = [];\r\n\tif (arr.length <= 1) return arr;\r\n\tmergeSortHelper(arr, 0, arr.length - 1, swapOrderArray);\r\n\tswapOrderArray.push([[...arr], 0, arr.length - 1, \"ALL-SORTED\"]);\r\n\treturn swapOrderArray;\r\n}\r\n\r\nfunction mergeSortHelper(arr, start, end, swapOrderArray) {\r\n\tif (start === end) return;\r\n\tconst mid = Math.floor((start + end) / 2);\r\n\tmergeSortHelper(arr, start, mid, swapOrderArray);\r\n\tmergeSortHelper(arr, mid + 1, end, swapOrderArray);\r\n\tmergeRecursive(arr, start, mid, end, swapOrderArray);\r\n}\r\n\r\nfunction mergeRecursive(arr, start, mid, end, swapOrderArray) {\r\n\tlet i = start;\r\n\tlet j = mid + 1;\r\n\tlet compIdx1 = start;\r\n\tlet compIdx2 = mid + 1;\r\n\r\n\twhile (i <= mid && j <= end) {\r\n\t\tswapOrderArray.push([[...arr], compIdx1, compIdx2, \"COMPARING\"]);\r\n\t\tif (arr[compIdx1] <= arr[compIdx2]) {\r\n\t\t\tswapOrderArray.push([[...arr], compIdx1++, compIdx2, \"CASE-LEFT\"]);\r\n\t\t\ti++;\r\n\t\t} else {\r\n\t\t\tswapOrderArray.push([\r\n\t\t\t\t[...arr],\r\n\t\t\t\tcompIdx1,\r\n\t\t\t\tcompIdx2,\r\n\t\t\t\t\"CASE-RIGHT-INIT\",\r\n\t\t\t]);\r\n\t\t\tlet temp = arr[compIdx2];\r\n\t\t\tfor (let g = compIdx2; g > compIdx1; g--) {\r\n\t\t\t\tarr[g] = arr[g - 1];\r\n\t\t\t}\r\n\t\t\tarr[compIdx1] = temp;\r\n\t\t\tswapOrderArray.push([\r\n\t\t\t\t[...arr],\r\n\t\t\t\tcompIdx1,\r\n\t\t\t\tcompIdx2++,\r\n\t\t\t\t\"CASE-RIGHT-SHIFT\",\r\n\t\t\t]);\r\n\t\t\tswapOrderArray.push([\r\n\t\t\t\t[...arr],\r\n\t\t\t\tcompIdx1,\r\n\t\t\t\t++compIdx1,\r\n\t\t\t\t\"CASE-RIGHT-REVERT\",\r\n\t\t\t]);\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\twhile (i <= mid) {\r\n\t\tswapOrderArray.push([[...arr], compIdx1, compIdx1, \"ONE-SIDE\"]);\r\n\t\tcompIdx1++;\r\n\t\ti++;\r\n\t}\r\n\twhile (j <= end) {\r\n\t\tswapOrderArray.push([[...arr], compIdx2, compIdx2, \"ONE-SIDE\"]);\r\n\t\tcompIdx2++;\r\n\t\tj++;\r\n\t}\r\n\r\n\tswapOrderArray.push([[...arr], start, end, \"MERGED\"]);\r\n}\r\n","export function getQuickSortSwapOrder(\n\tarr,\n\tleft = 0,\n\tright = arr.length - 1,\n\tswapOrderArray\n) {\n\tquickSort(arr, left, right, swapOrderArray);\n\tswapOrderArray.push([[...arr], left, right, \"ALL-SORTED\"]);\n\treturn swapOrderArray;\n}\n\nfunction quickSort(arr, left = 0, right = arr.length - 1, swapOrderArray) {\n\tif (left < right) {\n\t\tlet pivotIndex = pivotLomuto(arr, left, right, swapOrderArray);\n\t\tquickSort(arr, left, pivotIndex - 1, swapOrderArray);\n\t\tquickSort(arr, pivotIndex + 1, right, swapOrderArray);\n\t} else if (left === right) {\n\t\tswapOrderArray.push([[...arr], left, right, \"SORTED-1\"]); // red left\n\t\tswapOrderArray.push([[...arr], left, right, \"SORTED-2\"]); // green left\n\t}\n\treturn swapOrderArray;\n}\n\nfunction pivotLomuto(arr, start = 0, end = arr.length - 1, swapOrderArray) {\n\tlet pivot = arr[start];\n\tlet pivotIndex = start;\n\n\tswapOrderArray.push([[...arr], start, end, \"GET-PIVOT\"]); // red start\n\n\tfor (let i = start + 1; i <= end; i++) {\n\t\tswapOrderArray.push([[...arr], i, pivotIndex, \"COMPARE\"]); // yellow i\n\t\tif (pivot > arr[i]) {\n\t\t\tpivotIndex++;\n\t\t\tswapOrderArray.push([[...arr], pivotIndex, i, \"SWAP-1\"]); // orange i\n\t\t\tif (pivotIndex !== i) {\n\t\t\t\tswapOrderArray.push([[...arr], pivotIndex, i, \"SWAP-2\"]); // orange pivotIndex\n\t\t\t\tswap(arr, pivotIndex, i);\n\t\t\t\tswapOrderArray.push([[...arr], pivotIndex, i, \"SWAP-3\"]); // swap\n\t\t\t\tswapOrderArray.push([[...arr], pivotIndex, i, \"SWAP-4\"]); // blue, white\n\t\t\t} else {\n\t\t\t\tswapOrderArray.push([[...arr], pivotIndex, i, \"SAME-INDEX\"]); // blue pivotIndex\n\t\t\t}\n\t\t} else {\n\t\t\tswapOrderArray.push([[...arr], i, pivotIndex, \"REVERT\"]); // white i\n\t\t}\n\t}\n\tif (pivotIndex !== start) {\n\t\tswapOrderArray.push([[...arr], start, pivotIndex, \"SWAP-PIVOT-1\"]); // red pivotIndex\n\t\tswap(arr, start, pivotIndex);\n\t\tswapOrderArray.push([[...arr], start, pivotIndex, \"SWAP-PIVOT-2\"]); // swap\n\t\tswapOrderArray.push([[...arr], start, pivotIndex, \"SWAP-PIVOT-3\"]); // blue, green\n\t\tswapOrderArray.push([[...arr], start, pivotIndex, \"REVERT-ALL-1\"]); // default start to (pivotIndex - 1)\n\t} else {\n\t\tswapOrderArray.push([[...arr], start, pivotIndex, \"NO-CHANGE\"]); // green start\n\t}\n\tif (pivotIndex !== end) {\n\t\tswapOrderArray.push([\n\t\t\t[...arr],\n\t\t\tpivotIndex + 1,\n\t\t\tend + 1,\n\t\t\t\"REVERT-ALL-2\",\n\t\t]); // default (pivotIndex + 1) to (end)\n\t}\n\treturn pivotIndex;\n}\n\nfunction quickSortHoare(arr, start, end, swapOrderArray) {\n\tif (start < end) {\n\t\tlet pivotIndex = pivotHoare(arr, start, end, swapOrderArray);\n\t\tquickSortHoare(arr, start, pivotIndex, swapOrderArray);\n\t\tquickSortHoare(arr, pivotIndex + 1, end, swapOrderArray);\n\t} else {\n\t}\n}\n\nfunction pivotHoare(arr, start = 0, end = arr.length - 1, swapOrderArray) {\n\tlet mid = Math.floor((start + end) / 2);\n\tlet pivot = arr[mid];\n\tlet i = start;\n\tlet j = end;\n\n\tswapOrderArray.push([[...arr], mid, mid, \"GET-PIVOT\"]);\n\n\twhile (true) {\n\t\twhile (arr[i] < pivot) {\n\t\t\ti++;\n\t\t}\n\t\twhile (arr[j] > pivot) {\n\t\t\tj--;\n\t\t}\n\t\tif (i >= j) {\n\t\t\treturn j;\n\t\t}\n\t\tswap(arr, i++, j--);\n\t}\n}\n\nfunction swap(arr, i, j) {\n\t[arr[i], arr[j]] = [arr[j], arr[i]];\n}\n\nfunction getRandomNum(min, max) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getRandomArray = () => {\n\tconst newRandomHeights = [];\n\tfor (let i = 0; i < 5; i++) {\n\t\tnewRandomHeights.push(getRandomNum(5, 450));\n\t}\n\treturn newRandomHeights;\n};\n\nlet arr = getRandomArray();\n// let sorted = [...arr].sort((a, b) => a - b);\nquickSortHoare(arr, 0, arr.length - 1, []);\n","export function getRandomNum(min, max) {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function arraysAreEqual(arrayOne, arrayTwo) {\r\n\tif (arrayOne.length !== arrayTwo.length) return false;\r\n\tfor (let i = 0; i < arrayOne.length; i++) {\r\n\t\tif (arrayOne[i] !== arrayTwo[i]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport function getRandomColor() {\r\n\treturn RANDOM_COLORS[getRandomNum(0, RANDOM_COLORS.length - 1)];\r\n}\r\n\r\nexport const RANDOM_COLORS = [\r\n\t\"#AFD5AA\",\r\n\t\"#F0F2EF\",\r\n\t\"#5C5346\",\r\n\t\"#A69F98\",\r\n\t\"#8C6057\",\r\n\t\"#5BC0EB\",\r\n\t\"#FDE74C\",\r\n\t\"#9BC53D\",\r\n\t\"#E55934\",\r\n\t\"#FA7921\",\r\n\t\"#729EA1\",\r\n\t\"#B5BD89\",\r\n\t\"#DFBE99\",\r\n\t\"#EC9192\",\r\n\t\"#DB5375\",\r\n\t\"#283d3b\",\r\n\t\"#197278\",\r\n\t\"#edddd4\",\r\n\t\"#c44536\",\r\n\t\"#555b6e\",\r\n\t\"#89b0ae\",\r\n\t\"#bee3db\",\r\n\t\"#ffd6ba\",\r\n\t\"#e6b89c\",\r\n\t\"#cad2c5\",\r\n\t\"#84a98c\",\r\n\t\"#52796f\",\r\n\t\"#354f52\",\r\n\t\"#2f3e46\",\r\n\t\"#64a6bd\",\r\n\t\"#90a8c3\",\r\n\t\"#ada7c9\",\r\n\t\"#d7b9d5\",\r\n\t\"#f4cae0\",\r\n\t\"#114b5f\",\r\n\t\"#1a936f\",\r\n\t\"#88d498\",\r\n\t\"#c6dabf\",\r\n\t\"#f3e9d2\",\r\n\t\"#ed6a5a\",\r\n\t\"#f4f1bb\",\r\n\t\"#9bc1bc\",\r\n\t\"#5ca4a9\",\r\n\t\"#e6ebe0\",\r\n\t\"#0081a7\",\r\n\t\"#00afb9\",\r\n\t\"#fdfcdc\",\r\n\t\"#fed9b7\",\r\n\t\"#f07167\",\r\n\t\"#3d5a80\",\r\n\t\"#98c1d9\",\r\n\t\"#e0fbfc\",\r\n\t\"#ee6c4d\",\r\n\t\"#293241\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n\t// \"#772e25\",\r\n];\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport classes from \"./SortingVisualizer.module.css\";\r\nimport Bars from \"./Bars/Bars\";\r\nimport Controls from \"./Controls/Controls\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport { bubbleSort } from \"../../sortingAlgorithms/bubbleSort\";\r\nimport { selectionSort } from \"../../sortingAlgorithms/selectionSort\";\r\nimport { insertionSort } from \"../../sortingAlgorithms/insertionSort\";\r\nimport {\r\n\t// mergeSortIterative,\r\n\tgetMergeSortRecursiveSwapOrder,\r\n} from \"../../sortingAlgorithms/mergeSort\";\r\nimport { getQuickSortSwapOrder } from \"../../sortingAlgorithms/quickSort\";\r\nimport { getRandomNum, RANDOM_COLORS } from \"../../utilities\";\r\n\r\nconst COLOR_DEFAULT = \"#577590\";\r\nconst COLOR_COMPARING = \"#f9c74f\";\r\nconst COLOR_SWAP = \"#f94144\";\r\nconst COLOR_SORTED = \"#90be6d\";\r\nlet MIN_HEIGHT = 5;\r\nlet MAX_HEIGHT = 300;\r\nlet SORTING_SPEED = 5;\r\nlet NUM_BARS = 100;\r\n\r\nconst SortingVisualizer = (props) => {\r\n\tconst [randomHeights, setRandomHeights] = useState();\r\n\tconst [isSorting, setIsSorting] = useState(false);\r\n\tconst [numBars, setNumBars] = useState(NUM_BARS);\r\n\tconst [sortingSpeed, setSortingSpeed] = useState(SORTING_SPEED);\r\n\tconst [sortingFunction, setSortingFunction] = useState();\r\n\tconst [changeToDefault, setChangeToDefault] = useState(false);\r\n\tconst [sortingConfig, setSortingConfig] = useState({});\r\n\tconst barsContainer = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSortingFunction(() => () =>\r\n\t\t\thandleMergeSort(getMergeSortRecursiveSwapOrder)\r\n\t\t);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\thandleGenerateNewArray();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [numBars]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandleColorNewBars();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [randomHeights]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSortingFunction(() => sortingFunction);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [randomHeights]);\r\n\r\n\tconst handleGenerateNewArray = () => {\r\n\t\tconst newRandomHeights = [];\r\n\t\tfor (let i = 0; i < numBars; i++) {\r\n\t\t\tnewRandomHeights.push(getRandomNum(MIN_HEIGHT, MAX_HEIGHT));\r\n\t\t}\r\n\t\tsetChangeToDefault(true);\r\n\t\tsetRandomHeights(newRandomHeights);\r\n\t};\r\n\r\n\tconst handleColorNewBars = () => {\r\n\t\tif (changeToDefault) {\r\n\t\t\tlet bars = barsContainer.current.children;\r\n\t\t\tfor (let i = 0; i < numBars; i++) {\r\n\t\t\t\tbars[i].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeArraySize = (event) => {\r\n\t\tsetNumBars(event.target.value);\r\n\t};\r\n\r\n\tconst handleChangeSortingSpeed = (event) => {\r\n\t\tsetSortingSpeed(event.target.value);\r\n\t};\r\n\r\n\tconst handleBubbleSort = (config, heights, speed) => {\r\n\t\tsetIsSorting(true);\r\n\t\tbarsContainer.current.classList.remove(\"sorted\");\r\n\t\tlet swapOrderArray = bubbleSort([...heights]);\r\n\t\tlet bars = barsContainer.current.children;\r\n\r\n\t\tfor (let i = 0; i < swapOrderArray.length; i++) {\r\n\t\t\tlet state = swapOrderArray[i][3];\r\n\t\t\tlet swapIdx1 = swapOrderArray[i][1];\r\n\t\t\tlet swapIdx2 = swapOrderArray[i][2];\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (state === \"COMPARING\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t\tif (swapIdx1 !== 0) {\r\n\t\t\t\t\t\tbars[\r\n\t\t\t\t\t\t\tswapIdx1 - 1\r\n\t\t\t\t\t\t].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (state === \"SWAPPING-1\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"SWAPPING-2\") {\r\n\t\t\t\t\tbars[swapIdx1].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx1] + \"px\";\r\n\t\t\t\t\tbars[swapIdx2].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx2] + \"px\";\r\n\t\t\t\t} else if (state === \"SWAPPING-3\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"LAST-SORTED\") {\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t\tif (swapIdx1 >= 0)\r\n\t\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"ALL-SORTED-1\") {\r\n\t\t\t\t\tbarsContainer.current.classList.add(\"sorted\");\r\n\t\t\t\t\tsetChangeToDefault(false);\r\n\t\t\t\t\tsetIsSorting(false);\r\n\t\t\t\t\tsetRandomHeights(swapOrderArray[i][0]);\r\n\t\t\t\t}\r\n\t\t\t}, i * speed);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSelectionSort = (config, heights, speed) => {\r\n\t\tsetIsSorting(true);\r\n\t\tbarsContainer.current.classList.remove(\"sorted\");\r\n\t\tlet swapOrderArray = selectionSort([...heights]);\r\n\t\tlet bars = barsContainer.current.children;\r\n\r\n\t\tfor (let i = 0; i < swapOrderArray.length; i++) {\r\n\t\t\tlet state = swapOrderArray[i][3];\r\n\t\t\tlet swapIdx1 = swapOrderArray[i][1];\r\n\t\t\tlet swapIdx2 = swapOrderArray[i][2];\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (state === \"GET-INITIAL\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"CHECK-MIN\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t} else if (state === \"CHANGE-BACK\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"CHANGE-MIN\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t\tif (swapIdx2) {\r\n\t\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (state === \"SWAPPING-1\") {\r\n\t\t\t\t\tbars[swapIdx1].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx1] + \"px\";\r\n\t\t\t\t\tbars[swapIdx2].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx2] + \"px\";\r\n\t\t\t\t} else if (state === \"SWAPPING-2\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"NO-SWAP\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t} else if (state === \"ALL-SORTED\") {\r\n\t\t\t\t\tbarsContainer.current.classList.add(\"sorted\");\r\n\t\t\t\t\tsetChangeToDefault(false);\r\n\t\t\t\t\tsetIsSorting(false);\r\n\t\t\t\t\tsetRandomHeights(swapOrderArray[i][0]);\r\n\t\t\t\t}\r\n\t\t\t}, i * speed);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInsertionSort = (config, heights, speed) => {\r\n\t\tsetIsSorting(true);\r\n\t\tbarsContainer.current.classList.remove(\"sorted\");\r\n\t\tlet swapOrderArray = insertionSort([...heights]);\r\n\t\tlet bars = barsContainer.current.children;\r\n\r\n\t\tfor (let i = 0; i < swapOrderArray.length; i++) {\r\n\t\t\tlet state = swapOrderArray[i][3];\r\n\t\t\tlet swapIdx1 = swapOrderArray[i][1];\r\n\t\t\tlet swapIdx2 = swapOrderArray[i][2];\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (state === \"START\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t} else if (state === \"SWAP-1\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t\t// bars[swapIdx2].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t} else if (state === \"SWAP-2\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"SWAP-3\") {\r\n\t\t\t\t\tbars[swapIdx1].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx1] + \"px\";\r\n\t\t\t\t\tbars[swapIdx2].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx2] + \"px\";\r\n\t\t\t\t} else if (state === \"SWAP-4\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"DONE-1\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t} else if (state === \"DONE-2\") {\r\n\t\t\t\t\tif (swapIdx1 >= 0)\r\n\t\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t} else if (state === \"DONE-3\") {\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"SORTED\") {\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t} else if (state === \"ALL-SORTED\") {\r\n\t\t\t\t\tbarsContainer.current.classList.add(\"sorted\");\r\n\t\t\t\t\tsetChangeToDefault(false);\r\n\t\t\t\t\tsetIsSorting(false);\r\n\t\t\t\t\tsetRandomHeights(swapOrderArray[i][0]);\r\n\t\t\t\t}\r\n\t\t\t}, i * speed);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleMergeSort = (config, heights, speed) => {\r\n\t\tsetIsSorting(true);\r\n\t\tbarsContainer.current.classList.remove(\"sorted\");\r\n\t\tlet swapOrderArray = config.implementation([...heights]);\r\n\t\tlet bars = barsContainer.current.children;\r\n\t\tlet prevColor1 = COLOR_DEFAULT;\r\n\t\tlet prevColor2 = COLOR_DEFAULT;\r\n\t\tlet count = getRandomNum(0, RANDOM_COLORS.length - 1);\r\n\t\tlet color = RANDOM_COLORS[count];\r\n\r\n\t\tfor (let i = 0; i < swapOrderArray.length; i++) {\r\n\t\t\tlet state = swapOrderArray[i][3];\r\n\t\t\tlet swapIdx1 = swapOrderArray[i][1];\r\n\t\t\tlet swapIdx2 = swapOrderArray[i][2];\r\n\t\t\t// eslint-disable-next-line no-loop-func\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (state === \"COMPARING\") {\r\n\t\t\t\t\tprevColor1 = bars[swapIdx1].style.backgroundColor;\r\n\t\t\t\t\tprevColor2 = bars[swapIdx2].style.backgroundColor;\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t} else if (state === \"CASE-LEFT\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = color;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = prevColor2;\r\n\t\t\t\t} else if (state === \"CASE-RIGHT-INIT\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"CASE-RIGHT-SHIFT\") {\r\n\t\t\t\t\tfor (let j = swapIdx2; j >= swapIdx1; j--) {\r\n\t\t\t\t\t\tbars[j].style.height = swapOrderArray[i][0][j] + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = prevColor1;\r\n\t\t\t\t\tbars[swapIdx1 + 1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"CASE-RIGHT-REVERT\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = color;\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = prevColor1;\r\n\t\t\t\t} else if (state === \"ONE-SIDE\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = color;\r\n\t\t\t\t} else if (state === \"MERGED\") {\r\n\t\t\t\t\tcolor = RANDOM_COLORS[++count % RANDOM_COLORS.length];\r\n\t\t\t\t} else if (state === \"ALL-SORTED\") {\r\n\t\t\t\t\tbarsContainer.current.classList.add(\"sorted\");\r\n\t\t\t\t\tsetChangeToDefault(false);\r\n\t\t\t\t\tsetIsSorting(false);\r\n\t\t\t\t\tsetRandomHeights(swapOrderArray[i][0]);\r\n\t\t\t\t}\r\n\t\t\t}, i * speed);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleQuickSort = (config, heights, speed) => {\r\n\t\tsetIsSorting(true);\r\n\t\tbarsContainer.current.classList.remove(\"sorted\");\r\n\t\tlet swapOrderArray = getQuickSortSwapOrder(\r\n\t\t\t[...heights],\r\n\t\t\t0,\r\n\t\t\theights.length - 1,\r\n\t\t\t[]\r\n\t\t);\r\n\t\tlet bars = barsContainer.current.children;\r\n\t\tlet randomColor = \"#EFD6AC\";\r\n\r\n\t\tfor (let i = 0; i < swapOrderArray.length; i++) {\r\n\t\t\tlet state = swapOrderArray[i][3];\r\n\t\t\tlet swapIdx1 = swapOrderArray[i][1];\r\n\t\t\tlet swapIdx2 = swapOrderArray[i][2];\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (state === \"GET-PIVOT\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"COMPARE\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_COMPARING;\r\n\t\t\t\t} else if (state === \"REVERT\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = randomColor;\r\n\t\t\t\t} else if (state === \"SWAP-1\") {\r\n\t\t\t\t\t// bars[swapIdx1].style.backgroundColor = \"#FF784F\";\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = \"#FF784F\";\r\n\t\t\t\t} else if (state === \"SAME-INDEX\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = \"#1B5299\";\r\n\t\t\t\t} else if (state === \"SWAP-2\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = \"#FF784F\";\r\n\t\t\t\t} else if (state === \"SWAP-3\") {\r\n\t\t\t\t\tbars[swapIdx1].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx1] + \"px\";\r\n\t\t\t\t\tbars[swapIdx2].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx2] + \"px\";\r\n\t\t\t\t} else if (state === \"SWAP-4\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = \"#1B5299\";\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = randomColor;\r\n\t\t\t\t} else if (state === \"SWAP-PIVOT-1\") {\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"SWAP-PIVOT-2\") {\r\n\t\t\t\t\tbars[swapIdx1].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx1] + \"px\";\r\n\t\t\t\t\tbars[swapIdx2].style.height =\r\n\t\t\t\t\t\tswapOrderArray[i][0][swapIdx2] + \"px\";\r\n\t\t\t\t} else if (state === \"SWAP-PIVOT-3\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = \"#1B5299\";\r\n\t\t\t\t\tbars[swapIdx2].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t} else if (state === \"NO-CHANGE\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t} else if (state === \"REVERT-ALL-1\") {\r\n\t\t\t\t\tfor (let j = swapIdx1; j < swapIdx2; j++) {\r\n\t\t\t\t\t\tbars[j].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (state === \"REVERT-ALL-2\") {\r\n\t\t\t\t\tfor (let j = swapIdx1; j < swapIdx2; j++) {\r\n\t\t\t\t\t\tbars[j].style.backgroundColor = COLOR_DEFAULT;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (state === \"SORTED-1\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SWAP;\r\n\t\t\t\t} else if (state === \"SORTED-2\") {\r\n\t\t\t\t\tbars[swapIdx1].style.backgroundColor = COLOR_SORTED;\r\n\t\t\t\t} else if (state === \"ALL-SORTED\") {\r\n\t\t\t\t\tbarsContainer.current.classList.add(\"sorted\");\r\n\t\t\t\t\tsetChangeToDefault(false);\r\n\t\t\t\t\tsetIsSorting(false);\r\n\t\t\t\t\tsetRandomHeights(swapOrderArray[i][0]);\r\n\t\t\t\t}\r\n\t\t\t}, i * speed);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeSortingFunction = (event) => {\r\n\t\tswitch (event.target.value) {\r\n\t\t\tcase \"BubbleSort\":\r\n\t\t\t\tsetSortingFunction(() => handleBubbleSort);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SelectionSort\":\r\n\t\t\t\tsetSortingFunction(() => handleSelectionSort);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"InsertionSort\":\r\n\t\t\t\tsetSortingFunction(() => handleInsertionSort);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"MergeSort\":\r\n\t\t\t\tsetSortingConfig({\r\n\t\t\t\t\timplementation: getMergeSortRecursiveSwapOrder,\r\n\t\t\t\t});\r\n\t\t\t\tsetSortingFunction(() => handleMergeSort);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"QuickSort\":\r\n\t\t\t\tsetSortingFunction(() => handleQuickSort);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\t// const handleShellSort = () => {};\r\n\r\n\t// const handleHeapSort = () => {};\r\n\r\n\t// const handleRadixSort = () => {};\r\n\r\n\tconst handleTestAlgorithms = () => {\r\n\t\t/* CHECKS IF DOM HEIGHTS MATCH SORTED RANDOM HEIGHTS*/\r\n\t\t// const sortedRandomHeights = [...randomHeights].sort((a, b) => a - b);\r\n\t\t// const barsDOM = document.getElementsByClassName(\"bar\");\r\n\t\t// for (let i = 0; i < barsDOM.length; i++) {\r\n\t\t// \tconsole.log(\r\n\t\t// \t\tbarsDOM[i].style.height === sortedRandomHeights[i] + \"px\"\r\n\t\t// \t);\r\n\t\t// }\r\n\t\t// console.log(\"sorting function\", sortingFunction);\r\n\t\tconsole.log(\"test:\", randomHeights);\r\n\t\tconsole.log(\"test:\", sortingFunction);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.SortingVisualizer}>\r\n\t\t\t<div className={classes.Bars}>\r\n\t\t\t\t<Bars\r\n\t\t\t\t\tref={barsContainer}\r\n\t\t\t\t\theights={randomHeights}\r\n\t\t\t\t\tspeed={sortingSpeed}\r\n\t\t\t\t\tsortConfig={sortingConfig}\r\n\t\t\t\t\tdisabledControls={isSorting}\r\n\t\t\t\t\tchangedSortingFunction={handleChangeSortingFunction}\r\n\t\t\t\t\tgenerateNewArray={handleGenerateNewArray}\r\n\t\t\t\t\tsort={\r\n\t\t\t\t\t\tsortingFunction\r\n\t\t\t\t\t\t\t? sortingFunction\r\n\t\t\t\t\t\t\t: () =>\r\n\t\t\t\t\t\t\t\t\thandleMergeSort(\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\timplementation: getMergeSortRecursiveSwapOrder,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\trandomHeights,\r\n\t\t\t\t\t\t\t\t\t\tsortingSpeed\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t></Bars>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.Controls}>\r\n\t\t\t\t<Controls\r\n\t\t\t\t\theights={randomHeights}\r\n\t\t\t\t\tsize={numBars}\r\n\t\t\t\t\tspeed={sortingSpeed}\r\n\t\t\t\t\tsort={\r\n\t\t\t\t\t\tsortingFunction\r\n\t\t\t\t\t\t\t? sortingFunction\r\n\t\t\t\t\t\t\t: () =>\r\n\t\t\t\t\t\t\t\t\thandleMergeSort(\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\timplementation: getMergeSortRecursiveSwapOrder,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\trandomHeights,\r\n\t\t\t\t\t\t\t\t\t\tsortingSpeed\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsortConfig={sortingConfig}\r\n\t\t\t\t\tgenerateNewArray={handleGenerateNewArray}\r\n\t\t\t\t\tdisableControls={isSorting}\r\n\t\t\t\t\tchangedArraySize={handleChangeArraySize}\r\n\t\t\t\t\tchangedSortingSpeed={handleChangeSortingSpeed}\r\n\t\t\t\t\tchangedSortingFunction={handleChangeSortingFunction}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SortingVisualizer;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport SortingVisualizer from \"./containers/SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Layout>\n\t\t\t\t<SortingVisualizer></SortingVisualizer>\n\t\t\t</Layout>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}